#!/bin/bash
# disassemble classes

die() { echo "$@" 1>&2; exit 1; }

usage()
{
    cat <<-'EOF'
	usage: xdo dasm [file.class ...]

	Without arguments, disassemble all classes in currently extracted jar.
	(disassembled classes which are up-to-date are not disassembled again)

	If class files are specified, just disassemble these.
	EOF
    exit 1
}

[ "$1" = "help" ] || [ "$1" = "--help" ] || [ "$1" = "-h" ] && usage

# Standalone mode
if [ "$1" != "" ]; then
    for f in "$@"; do
	java_dasm "$f"
    done
    exit 0
fi


[ -d "jar" ] || die "no jar/ directory. Open jar first "

dasm_all()
{
    cat > Makefile.xdo <<'EOF'
CLASSES  = $(shell find . -name "*.class")
SRCJ     = $(CLASSES:.class=.j)

all: $(SRCJ)

%.j: %.class
	@echo DASM '$<'
	@java_dasm '$<'
EOF
    jobs=1
    if [ -f /proc/cpuinfo ]; then
	jobs=`cat /proc/cpuinfo | grep processor | wc -l`
    fi
    make -f Makefile.xdo -j$jobs all
    rm Makefile.xdo    
}

set -e
cd jar
n=`find . -name "*.class" | wc -l`
[ "$n" = 0 ] && die "No input files. Files already disassembled ?"
dasm_all

