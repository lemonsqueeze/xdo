#!/usr/bin/perl
# rename obfuscated methods based on defining class
use FindBin;
use lib "$FindBin::Bin/../lib";	 # Find modules in ../lib
use common;

global_init();

sub usage
{    
    print q{
rename obfuscated methods based on defining class to remove any ambiguities
and make it pretty clear what methods are being called and where they come from:

usage: xdo renmethods [-cp classpath]

    Class ab
    {
        public void a()
        public void a(int i)
        public void a(String s)      // overridden method from class 'tt'
    }

    Class ac
    {
        public void a()
        public void a(int i)
    }

are renamed as:

    Class ab
    {
        public void ab_a()
        public void ab_a(int i)
        public void tt_a(String s)   // overridden method from class 'tt' 
    }

    Class ac
    {
        public void ac_a()
        public void ac_a(int i)
    }


};
    exit 1;
};

if ($ARGV[0] =~ m/^(-h|-help|--help)$/)  {  usage();  }

(-d "jar") || die "No jar directory, open a jar first.\n";
chdir "jar" || die "Couldn't cd jar/\n";

open(FILES, "find . -name '*.j' |");
my @FILES = <FILES>;  chomp(@FILES);
close(FILES);
if (!@FILES) { die "No disassembled classes found. Run dasm first.\n"; }


################################################################################

use class_info;
get_class_info(@FILES);

################################################################################


# Methods we want to rename
my $re_meth_match = qr|[0-9a-zA-Z_]{1,3}|;	# 3 letters max
#my $re_meth_match = qr|[0-9a-zA-Z_]+|;		# any


sub class_prefix
{
    my ($class) = @_;
    my @parts = split("/", $class);    
    $class = pop(@parts);   # just keep last part
    $class =~ s|\$|_|g;    
    return $class;
}

sub class_prefix_method_renamer
{
    my ($class, $method, $type, $def_class) = @_;

    if ($method =~ m/^$re_meth_match$/)
    {   return  (class_prefix($def_class) . "_" . $method);   }
    return $method;
}

use rename_methods;
get_methods_mapping(\&class_prefix_method_renamer);


################################################################################


rename_methods(@FILES);
